In this project, I was presented with a database titled 'chinook'.
It contained a variety of information such as employees, customers, invoices, albums, etc.
Here you'll see some query I used in analyzing this database.

-- Show Customers (their full names, customer ID, and country) who are not in the US.
SELECT CustomerId
,FirstName
,LastName
,Country
FROM chinook.customers
WHERE Country <> 'USA'
;

-- Show only the Customers from Brazil.
SELECT CustomerId
,FirstName
,LastName
,Country
FROM chinook.customers
WHERE Country = 'Brazil'
;

-- Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.
SELECT FirstName
,LastName
,InvoiceID
,InvoiceDate
,BillingCountry
FROM chinook.customers cust
LEFT JOIN chinook.invoices inv
ON cust.CustomerID = inv.CustomerID
WHERE BillingCountry = 'Brazil'
;

-- Show the Employees who are Sales Agents.
SELECT LastName
,FirstName
,Title
FROM chinook.employees
WHERE Title = 'Sales Support Agent'
;

-- Find a unique/distinct list of billing countries from the Invoice table.
SELECT DISTINCT BillingCountry
FROM chinook.invoices
;

-- How many Invoices were there in 2009?
SELECT COUNT (InvoiceDate) AS Total2009Invoices
FROM chinook.invoices
WHERE InvoiceDate LIKE '2009%'
;

-- What are the total sales for 2009?
SELECT SUM (TOTAL)
FROM chinook.invoices
WHERE InvoiceDate LIKE '2009%'
;

-- Write a query that includes the purchased track name with each invoice line ID.
SELECT Name
,InvoiceLineId
FROM chinook.Invoice_items i
JOIN chinook.Tracks t 
ON i.TrackId = t.TrackId
;

-- Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT ar.name as Artist
,t.Name as Track
,i.InvoiceLineId
FROM chinook.Invoice_items i
LEFT JOIN chinook.tracks t 
ON i.TrackID=t.TrackID
INNER JOIN chinook.albums a
ON a.AlbumID=t.AlbumID
LEFT JOIN chinook.artists ar
ON ar.ArtistID=a.ArtistID
;

-- Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT t.Name AS 'Track Name'
,a.Title AS 'Album Title'
,m.Name AS 'Media Type'
,g.Name AS 'Genre'
FROM chinook.tracks t
JOIN chinook.Albums a 
on a.AlbumId = t.AlbumId
JOIN chinook.Media_Types m
on m.MediaTypeId = t.MediaTypeId
JOIN chinook.Genres g
on g.GenreId = t.GenreId
;
